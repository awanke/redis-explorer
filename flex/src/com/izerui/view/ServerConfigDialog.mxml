<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               close="titlewindow1_closeHandler(event)"
               title.add="{resourceManager.getString('redis','add')}{resourceManager.getString('redis','server')}"
               title.edit="{resourceManager.getString('redis','edit')}{resourceManager.getString('redis','server')}"
               showCloseButton="true"
               verticalAlign="middle" horizontalAlign="center"
               width="360" height="300">
    <fx:Metadata>
        [Event(name="redisServerUpdateEvent", type="com.izerui.support.event.RedisServerUpdateEvent")]
    </fx:Metadata>
    <fx:Script>
		<![CDATA[
        import com.adobe.cairngorm.control.CairngormEventDispatcher;
        import com.izerui.event.SaveServerConfigEvent;
        import com.izerui.support.PopUtils;
        import com.izerui.support.event.RedisServerUpdateEvent;
        import com.izerui.vo.RedisServerConfig;

        import mx.controls.Alert;
        import mx.core.IFlexDisplayObject;
        import mx.events.CloseEvent;
        import mx.validators.Validator;

        private var _item:RedisServerConfig = new RedisServerConfig;

        [Bindable]
        public function get item():RedisServerConfig {
            if (_item.port == 0) {
                _item.port = 6379;
            }
            return _item;
        }

        public function set item(value:RedisServerConfig):void {
            _item = value;
        }

        protected function titlewindow1_closeHandler(event:CloseEvent):void {
            PopUtils.removeUp(this);
        }


        protected function button1_clickHandler(event:MouseEvent):void {

            var validates:Array = Validator.validateAll([hostStringValidator, hostNameStringValidator, portStringValidator]);
            if (validates.length != 0) {
                return;
            }
            CairngormEventDispatcher.getInstance().dispatchEvent(new SaveServerConfigEvent(item, function (data:RedisServerConfig):void {
                dispatchEvent(new RedisServerUpdateEvent(data));
                PopUtils.removeUp(IFlexDisplayObject(document));
            }));
        }
        ]]>
	</fx:Script>
    <mx:states>
        <s:State name="add"/>
        <s:State name="edit"/>
    </mx:states>
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
        <mx:StringValidator id="hostStringValidator" source="{host}" property="text" required="true"/>
        <mx:StringValidator id="hostNameStringValidator" source="{hostName}" property="text" required="true"/>
        <mx:StringValidator id="portStringValidator" source="{port}" property="value" required="true"/>
    </fx:Declarations>

    <mx:Form id="form" verticalGap="10">
        <mx:FormItem label="{resourceManager.getString('redis','name')}:">
            <mx:TextInput id="hostName" width="236" text="@{item.displayName}"/>
        </mx:FormItem>
        <mx:FormItem
                label="{resourceManager.getString('redis','server')}:">
            <mx:TextInput id="host" width="236" text="@{item.host}"/>
        </mx:FormItem>
        <mx:FormItem
                label="{resourceManager.getString('redis','port')}:">
            <mx:NumericStepper id="port" maximum="65535" value="@{item.port}"/>
        </mx:FormItem>
        <mx:FormItem
                label="{resourceManager.getString('redis','password')}:">
            <mx:TextInput id="password" displayAsPassword="true" width="236" text="@{item.password}"/>
        </mx:FormItem>
    </mx:Form>

    <mx:ControlBar>
        <s:HGroup horizontalAlign="right" width="100%">
            <s:Button label="{resourceManager.getString('redis','apply')}" icon="@Embed('/images/accept.png')"
                      click="button1_clickHandler(event)">

            </s:Button>
            <s:Button label="{resourceManager.getString('redis','cancel')}" icon="@Embed('/images/redo.png')"
                      click="PopUtils.removeUp(this);">

            </s:Button>

        </s:HGroup>
    </mx:ControlBar>
</mx:TitleWindow>
